
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.Serializable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Deni
 */
public class CampoDeTextoHint extends javax.swing.JPanel implements Serializable {
    String hint ="{{CampoTextToHint}}";
    public enum tipoCampo{CADENA,NUMERICO};
     tipoCampo tipo = tipoCampo.CADENA;

    public tipoCampo getTipo() {
        return tipo;
    }

    public void setTipo(tipoCampo tipo) {
        this.tipo = tipo;
    }
    
    

    public String getHint() {
        return hint;
    }

    public void setHint(String texto) {
        
        hint = texto;
        jTextField1.setText(hint);
    }
   
    public CampoDeTextoHint() {
        initComponents();
        jTextField1.setText(hint);
        jTextField1.setForeground(Color.LIGHT_GRAY);
        jTextField1.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if(jTextField1.getText().equals(hint)==true){
                    jTextField1.setText("");
                    jTextField1.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                 if(jTextField1.getText().equals("")==true){
                    jTextField1.setText(hint);
                    jTextField1.setForeground(Color.LIGHT_GRAY);
                 }
            }
        });
        
        jTextField1.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                char tecla = e.getKeyChar();
                
                if(tipo == tipoCampo.NUMERICO){
                    if(((tecla<48)||(tecla>57))&&(tecla != '\b')){
                        e.consume();
                    }
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
                
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
        });
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
